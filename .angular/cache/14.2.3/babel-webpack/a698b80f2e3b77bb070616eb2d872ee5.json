{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { FormGroup, FormControl } from \"@angular/forms\";\nlet ArticulosComponent = class ArticulosComponent {\n  constructor(articulosService, articulosFamiliasService) {\n    this.articulosService = articulosService;\n    this.articulosFamiliasService = articulosFamiliasService;\n    this.Titulo = \"Articulos\";\n    this.TituloAccionABMC = {\n      A: \"(Agregar)\",\n      B: \"(Eliminar)\",\n      M: \"(Modificar)\",\n      C: \"(Consultar)\",\n      L: \"(Listado)\"\n    };\n    this.AccionABMC = \"L\"; // inicia en el listado de articulos (buscar con parametros)\n\n    this.Mensajes = {\n      SD: \" No se encontraron registros...\",\n      RD: \" Revisar los datos ingresados...\"\n    };\n    this.Items = null;\n    this.RegistrosTotal = 1;\n    this.Familias = null;\n    this.Pagina = 1; // inicia pagina 1\n    // opciones del combo activo\n\n    this.OpcionesActivo = [{\n      Id: null,\n      Nombre: \"Todos\"\n    }, {\n      Id: true,\n      Nombre: \"SI\"\n    }, {\n      Id: false,\n      Nombre: \"NO\"\n    }];\n    this.FormBusqueda = new FormGroup({\n      Nombre: new FormControl(null),\n      Activo: new FormControl(null)\n    });\n    this.FormRegistro = new FormGroup({\n      IdArticulo: new FormControl(0),\n      Nombre: new FormControl(\"\"),\n      Precio: new FormControl(null),\n      Stock: new FormControl(null),\n      CodigoDeBarra: new FormControl(\"\"),\n      IdArticuloFamilia: new FormControl(\"\"),\n      FechaAlta: new FormControl(\"\"),\n      Activo: new FormControl(true)\n    });\n  }\n\n  ngOnInit() {\n    this.GetFamiliasArticulos();\n  }\n\n  GetFamiliasArticulos() {\n    this.articulosFamiliasService.get().subscribe(res => {\n      this.Familias = res;\n    });\n  }\n\n  Agregar() {\n    this.AccionABMC = \"A\";\n  } // Buscar segun los filtros, establecidos en FormRegistro\n\n\n  Buscar() {\n    this.articulosService.get(\"\", null, this.Pagina).subscribe(res => {\n      this.Items = res.Items;\n      this.RegistrosTotal = res.RegistrosTotal;\n    });\n  } // Obtengo un registro especifico seg√∫n el Id\n\n\n  BuscarPorId(Item, AccionABMC) {\n    window.scroll(0, 0); // ir al incio del scroll\n\n    this.AccionABMC = AccionABMC;\n  }\n\n  Consultar(Item) {\n    this.BuscarPorId(Item, \"C\");\n  } // comienza la modificacion, luego la confirma con el metodo Grabar\n\n\n  Modificar(Item) {\n    if (!Item.Activo) {\n      alert(\"No puede modificarse un registro Inactivo.\");\n      return;\n    }\n\n    this.BuscarPorId(Item, \"M\");\n  } // grabar tanto altas como modificaciones\n\n\n  Grabar() {\n    alert(\"Registro Grabado!\");\n    this.Volver();\n  }\n\n  ActivarDesactivar(Item) {\n    var resp = confirm(\"Esta seguro de \" + (Item.Activo ? \"desactivar\" : \"activar\") + \" este registro?\");\n    if (resp === true) alert(\"registro activado/desactivado!\");\n  } // Volver desde Agregar/Modificar\n\n\n  Volver() {\n    this.AccionABMC = \"L\";\n  }\n\n  ImprimirListado() {\n    alert(\"Sin desarrollar...\");\n  }\n\n};\nArticulosComponent = __decorate([Component({\n  selector: \"app-articulos\",\n  templateUrl: \"./articulos.component.html\",\n  styleUrls: [\"./articulos.component.css\"]\n})], ArticulosComponent);\nexport { ArticulosComponent };","map":null,"metadata":{},"sourceType":"module"}